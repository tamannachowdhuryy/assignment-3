{"ast":null,"code":"/*==================================================\n/src/store/thunks.js\n\nIt contains all Thunk Creators and Thunks.\n================================================== */\nimport * as ac from './actions/actionCreators'; // Import Action Creators (\"ac\" keyword Action Creator)\nimport { useHistory } from 'react-router-dom';\nconst axios = require('axios');\n\n//All Campuses\n// THUNK CREATOR:\nexport const fetchAllCampusesThunk = () => async dispatch => {\n  // The THUNK\n  try {\n    // API \"get\" call to get \"campuses\" data from database\n    let res = await axios.get(`/api/campuses`);\n    // Call Action Creator to return Action object (type + payload with \"campuses\" data)\n    // Then dispatch the Action object to Reducer to update state \n    dispatch(ac.fetchAllCampuses(res.data));\n  } catch (err) {\n    console.error(err);\n  }\n};\n\n// Single Campus\n// THUNK CREATOR:\nexport const addCampusThunk = campus => async dispatch => {\n  // The THUNK\n  try {\n    // Post request to add student to database\n    let res = await axios.post(`/api/campuses`, campus);\n    dispatch(ac.addCampus(res.data));\n    return res.data;\n  } catch (err) {\n    console.error(err);\n  }\n};\nexport const fetchCampusThunk = id => async dispatch => {\n  // The THUNK\n  try {\n    // API \"get\" call to get a student data (based on \"id\")from database\n    let res = await axios.get(`/api/campuses/${id}`);\n    dispatch(ac.fetchCampus(res.data));\n  } catch (err) {\n    console.error(err);\n  }\n};\nexport const editCampusThunk = campus => async dispatch => {\n  // The THUNK\n  try {\n    // Use put request to update campus information\n    let updatedCampus = await axios.put(`/api/campuses/${campus.id}`, campus);\n    // Update successful so change state with dispatch\n    dispatch(ac.editCampus(updatedCampus));\n  } catch (err) {\n    console.error(err);\n  }\n};\nexport const deleteCampusThunk = campusId => async dispatch => {\n  // The THUNK\n  try {\n    // Delete campus from database using delete request call\n    await axios.delete(`/api/campuses/${campusId}`);\n    // Delete successful so change state with dispatch\n    dispatch(ac.deleteCampus(campusId));\n  } catch (err) {\n    console.error(err);\n  }\n};\nexport const enrollExistingStudentThunk = student => async dispatch => {\n  try {\n    // Perform the API call to enroll the student in the campus\n    let res = await axios.get(`/api/students`);\n    dispatch(ac.fetchAllStudents(res.data));\n    const response = await axios.put(`/api/enrollexisting`, student);\n\n    // Dispatch the action to update the state with the enrolled student\n    dispatch(ac.enrollExistingStudent(response.data));\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// All Students\n// THUNK CREATOR:\nexport const fetchAllStudentsThunk = () => async dispatch => {\n  // The THUNK\n  try {\n    // API \"get\" call to get \"students\" data from database\n    let res = await axios.get(`/api/students`);\n    // Call Action Creator to return Action object (type + payload with \"students\" data)\n    // Then dispatch the Action object to Reducer to update state \n    dispatch(ac.fetchAllStudents(res.data));\n  } catch (err) {\n    console.error(err);\n  }\n};\n\n// Add Student\n// THUNK CREATOR:\nexport const addStudentThunk = student => async dispatch => {\n  // The THUNK\n  try {\n    // API \"post\" call to add \"student\" object's data to database\n    let res = await axios.post(`/api/students`, student);\n    // Call Action Creator to return Action object (type + payload with new students data)\n    // Then dispatch the Action object to Reducer to update state \n    dispatch(ac.addStudent(res.data));\n    return res.data;\n  } catch (err) {\n    console.error(err);\n  }\n};\n\n// Delete Student\n// THUNK CREATOR:\nexport const deleteStudentThunk = studentId => async dispatch => {\n  // The THUNK\n  try {\n    // API \"delete\" call to delete student (based on \"studentID\") from database\n    await axios.delete(`/api/students/${studentId}`);\n    // Delete successful so change state with dispatch\n    dispatch(ac.deleteStudent(studentId));\n    // Redirect to the \"All Students\" page\n  } catch (err) {\n    console.error(err);\n  }\n};\n\n// Edit Student\n// THUNK CREATOR:\nexport const editStudentThunk = student => async dispatch => {\n  // The THUNK\n  try {\n    // console.log(student);\n    // API \"put\" call to update student (based on \"id\" and \"student\" object's data) from database\n    let updatedStudent = await axios.put(`/api/students/${student.id}`, student);\n    // Update successful so change state with dispatch\n    dispatch(ac.editStudent(updatedStudent));\n  } catch (err) {\n    console.error(err);\n  }\n};\n\n// Single Student\n// THUNK CREATOR:\nexport const fetchStudentThunk = id => async dispatch => {\n  // The THUNK\n  try {\n    // API \"get\" call to get a specific student (based on \"id\") data from database\n    let res = await axios.get(`/api/students/${id}`);\n    // Call Action Creator to return Action object (type + payload with student data)\n    // Then dispatch the Action object to Reducer to display student data \n    dispatch(ac.fetchStudent(res.data));\n  } catch (err) {\n    console.error(err);\n  }\n};","map":{"version":3,"names":["ac","useHistory","axios","require","fetchAllCampusesThunk","dispatch","res","get","fetchAllCampuses","data","err","console","error","addCampusThunk","campus","post","addCampus","fetchCampusThunk","id","fetchCampus","editCampusThunk","updatedCampus","put","editCampus","deleteCampusThunk","campusId","delete","deleteCampus","enrollExistingStudentThunk","student","fetchAllStudents","response","enrollExistingStudent","fetchAllStudentsThunk","addStudentThunk","addStudent","deleteStudentThunk","studentId","deleteStudent","editStudentThunk","updatedStudent","editStudent","fetchStudentThunk","fetchStudent"],"sources":["/Users/zeeshan/Desktop/Computer Science/CS395/Assignment-4/client/src/store/thunks.js"],"sourcesContent":["/*==================================================\n/src/store/thunks.js\n\nIt contains all Thunk Creators and Thunks.\n================================================== */\nimport * as ac from './actions/actionCreators';  // Import Action Creators (\"ac\" keyword Action Creator)\nimport { useHistory } from 'react-router-dom';\nconst axios = require('axios');\n\n//All Campuses\n// THUNK CREATOR:\nexport const fetchAllCampusesThunk = () => async (dispatch) => {  // The THUNK\n  try {\n    // API \"get\" call to get \"campuses\" data from database\n    let res = await axios.get(`/api/campuses`);  \n    // Call Action Creator to return Action object (type + payload with \"campuses\" data)\n    // Then dispatch the Action object to Reducer to update state \n    dispatch(ac.fetchAllCampuses(res.data));\n  } catch(err) {\n    console.error(err);\n  }\n};\n\n// Single Campus\n// THUNK CREATOR:\nexport const addCampusThunk = (campus) => async (dispatch) => {  // The THUNK\n  try {\n    // Post request to add student to database\n    let res = await axios.post(`/api/campuses`, campus);  \n    \n    dispatch(ac.addCampus(res.data));\n    return res.data;\n  } catch(err) {\n    console.error(err);\n  }\n};\n\nexport const fetchCampusThunk = (id) => async (dispatch) => {  // The THUNK\n  try {\n    // API \"get\" call to get a student data (based on \"id\")from database\n    let res = await axios.get(`/api/campuses/${id}`);  \n    dispatch(ac.fetchCampus(res.data));\n  } catch(err) {\n    console.error(err);\n  }\n};\n\nexport const editCampusThunk = campus => async dispatch => {  // The THUNK\n  try {\n    // Use put request to update campus information\n    let updatedCampus = await axios.put(`/api/campuses/${campus.id}`, campus); \n    // Update successful so change state with dispatch\n    dispatch(ac.editCampus(updatedCampus));\n  } catch(err) {\n    console.error(err);\n  }\n};\n\nexport const deleteCampusThunk = campusId => async dispatch => {  // The THUNK\n  try {\n    // Delete campus from database using delete request call\n    await axios.delete(`/api/campuses/${campusId}`);  \n    // Delete successful so change state with dispatch\n    dispatch(ac.deleteCampus(campusId));\n  } catch(err) {\n    console.error(err);\n  }\n};\n\nexport const enrollExistingStudentThunk = (student) => async (dispatch) => {\n  try {\n    // Perform the API call to enroll the student in the campus\n    let res = await axios.get(`/api/students`);  \n    dispatch(ac.fetchAllStudents(res.data));  \n\n    const response = await axios.put(`/api/enrollexisting`, student);\n    \n    // Dispatch the action to update the state with the enrolled student\n    dispatch(ac.enrollExistingStudent(response.data));\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// All Students\n// THUNK CREATOR:\nexport const fetchAllStudentsThunk = () => async (dispatch) => {  // The THUNK\n  try {\n    // API \"get\" call to get \"students\" data from database\n    let res = await axios.get(`/api/students`);  \n    // Call Action Creator to return Action object (type + payload with \"students\" data)\n    // Then dispatch the Action object to Reducer to update state \n    dispatch(ac.fetchAllStudents(res.data));  \n  } catch(err) {\n    console.error(err);\n  }\n};\n\n// Add Student\n// THUNK CREATOR:\nexport const addStudentThunk = (student) => async (dispatch) => {  // The THUNK\n  try {\n    // API \"post\" call to add \"student\" object's data to database\n    let res = await axios.post(`/api/students`, student);  \n    // Call Action Creator to return Action object (type + payload with new students data)\n    // Then dispatch the Action object to Reducer to update state \n    dispatch(ac.addStudent(res.data));\n    return res.data;\n  } catch(err) {\n    console.error(err);\n  }\n};\n\n// Delete Student\n// THUNK CREATOR:\nexport const deleteStudentThunk = studentId => async dispatch => {  // The THUNK\n  try {\n    // API \"delete\" call to delete student (based on \"studentID\") from database\n    await axios.delete(`/api/students/${studentId}`);  \n    // Delete successful so change state with dispatch\n    dispatch(ac.deleteStudent(studentId));\n    // Redirect to the \"All Students\" page\n  } catch(err) {\n    console.error(err);\n  }\n};\n\n// Edit Student\n// THUNK CREATOR:\nexport const editStudentThunk = student => async dispatch => {  // The THUNK\n  try {\n    // console.log(student);\n    // API \"put\" call to update student (based on \"id\" and \"student\" object's data) from database\n    let updatedStudent = await axios.put(`/api/students/${student.id}`, student); \n    // Update successful so change state with dispatch\n    dispatch(ac.editStudent(updatedStudent));\n  } catch(err) {\n    console.error(err);\n  }\n};\n\n// Single Student\n// THUNK CREATOR:\nexport const fetchStudentThunk = id => async dispatch => {  // The THUNK\n  try {\n    // API \"get\" call to get a specific student (based on \"id\") data from database\n    let res = await axios.get(`/api/students/${id}`);  \n    // Call Action Creator to return Action object (type + payload with student data)\n    // Then dispatch the Action object to Reducer to display student data \n    dispatch(ac.fetchStudent(res.data));\n  } catch(err) {\n    console.error(err);\n  }\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}